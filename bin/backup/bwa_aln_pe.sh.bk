#!/bin/bash -eu

echo "*** Aligning reads using BWA aln/PE algorithm ***"
echo ">>> Caveat: pipe might broken but file will be written!"
echo ">>> e.g. get empty out.bam because fastq file does not exist"

if [ $# -lt 1 ]
then 
	echo "Usage: $0 <out.bam> <fastq1> <fastq2> [RG tag]"
	exit 1
fi

o=`cd \`dirname $1\`; pwd`/`basename $1`; shift
[[ $o = *.bam ]] && o=${o%.bam}

q1=`cd \`dirname $1\`; pwd`/`basename $1`
q2=`cd \`dirname $2\`; pwd`/`basename $2`

sai1=`basename $q1.r1.sai`
sai2=`basename $q2.r2.sai`

[[ ! -f $q1 ]] && echo ">>> Does not exist: $q1" && exit 1
[[ ! -f $q2 ]] && echo ">>> Does not exist: $q2" && exit 1
[[ $q1 = *.bam ]] && input_format="ubam" || input_format="fastq"


## update 07/23/2015: change -R to -r for RG tag
optRG=""
lastArg=${BASH_ARGV[0]}
if [[ $lastArg =~ "@RG" ]]
then
        optRG="-r $lastArg"
fi

## update 07/23/2015: deleted $optRG for aln step
if [[ $input_format = "ubam" ]]; then
	cmd1="bwa aln -b -1 -t 4 $ref_genome $q1 > $sai1"
	cmd2="bwa aln -b -2 -t 4 $ref_genome $q2 > $sai2"
else
	cmd1="bwa aln -t 4 $ref_genome $q1 > $sai1"
	cmd2="bwa aln -t 4 $ref_genome $q2 > $sai2"
fi
eval $cmd1
eval $cmd2

cmd3="bwa sampe $ref_genome $sai1 $sai2 $q1 $q2 $optRG | samtools view -b - | samtools sort - $o"
eval $cmd4

cmd4="[[ -f $o.bam ]] && samtools index $o.bam || (echo \">>> not found: $o.bam\"; exit 1)"
eval $cmd4

echo "*** Finished aligning reads ***"
